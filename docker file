# Stage 1: Build Stage
# Use an official Node.js image as the base image for building the app
FROM node:16-alpine AS build

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json to install dependencies
COPY package.json package-lock.json ./

# Install all the dependencies (including devDependencies)
RUN npm install

# Copy the entire app code into the container
COPY . .

# Build the application (if needed, such as for transpiling or bundling)
# This step is optional depending on your build process (e.g., if using Babel, Webpack, TypeScript)
# RUN npm run build  # Uncomment if you have a build step

# Stage 2: Production Stage
# Use a smaller image for the production environment
FROM node:16-alpine AS production

# Set the working directory inside the container for the production stage
WORKDIR /app

# Copy only the necessary files from the build stage
COPY --from=build /app/package.json /app/package-lock.json ./


# Copy the app code from the build stage to the production stage
COPY --from=build /app/src ./src

# Expose the port the app will run on (example: 3000)
EXPOSE 3000

# Start the application
CMD ["node", "src/appointment.js"]  # Or whichever entry point you need
